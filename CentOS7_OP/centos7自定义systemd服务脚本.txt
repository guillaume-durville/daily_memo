#centos7自定义systemd服务脚本

#脚本保存目录是 
/usr/lib/systemd/system/  #安装程序使用（如RPM包安装）
/etc/systemd/system/  #供系统管理员和用户使用

两种类型的文件:
- .service  #服务unit文件
- .target   #服务运行级别

#服务脚本实例
vim /usr/lib/systemd/system/xxx.service 

[Unit]  #描述说明
Description=nginx - high performance web server
After==network-online.target  #服务类别
Before=xxx.service  #表示在某服务启动之前启动,只涉及顺序不涉及依赖关系

[Service]
Type=forking  #表示后台运行模式
User=xxx
Group=xxx
KillMode=control-group  #定义systemd如何停止服务
PIDFile=/usr/local/test/test.pid  #存放pid的路径
Restart=no  #定义服务进程退出后,systemd的重启方式

ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf
ExecReload=/usr/local/nginx/sbin/nginx -s reload
ExecStop=/usr/local/nginx/conf/nginx -s stop 
#ExecReload=/bin/kill -s HUP $MAINPID

EnvironmentFile=
PrivateTmp=True   #给服务分配独立的临时空间
TimeoutSec=0
RestartSec=2
Restart=always

[Install]
WantedBy=multi-user.target  #多用户

###字段说明
Type类型有:
- simple (默认的),以ExecStart字段启动的进程为主进程
- forking：fork()方式启动,父进程将退出,子进程成为主进程后台运行
- oneshot：类似simple,只执行一次,systemd等它执行完后才启动其他服务
- dbus：类似simple,等待D-Bus信号后启动
- notify：类似simple,启动结束后发出通知信号
- idle：类似simple,要等到其他任务都执行完,才执行该服务

EnvironmentFile：指定配置文件,和连词组合使用,可以避免配置文件不存在报错
例如：Environment=DATA_DIR=/data/elk
    Environment=LOG_DIR=/var/log/elasticsearch
    Environment=PID_DIR=/var/run/elasticsearch
    EnvironmentFile=-/etc/sysconfig/elasticsearch  #-可避免异常
	
KillMode类型:
- control-group默认,当前控制组下的所有子进程都会被杀掉
- process 只杀主进程
- mixed 主进程将收到SIGTERM信号,子进程收到SIGKILL信号
- none没有进程杀掉只执行服务的stop命令

Restart类型:
    no(默认值)： # 退出后无操作
    on-success:  # 只有正常退出时（退出状态码为0）,才会重启
    on-failure:  # 非正常退出时，重启，包括被信号终止和超时等
    on-abnormal: # 只有被信号终止或超时，才会重启
    on-abort:    # 只有在收到没有捕捉到的信号终止时，才会重启
    on-watchdog: # 超时退出时，才会重启
    always:      # 不管什么退出原因，都会重启
    # 对于守护进程，推荐用on-failure
RestartSec字段：
    表示systemd重启服务之前，需要等待的秒数：RestartSec: 30 
    
各种Exec*字段：
    # Exec* 后面接的命令，仅接受“指令 参数 参数..”格式，不能接受<>|&等特殊字符，很多bash语法也不支持。如果想支持bash语法，需要设置Tyep=oneshot
    ExecStart：    # 启动服务时执行的命令
    ExecReload：   # 重启服务时执行的命令 
    ExecStop：     # 停止服务时执行的命令 
    ExecStartPre： # 启动服务前执行的命令 
    ExecStartPost：# 启动服务后执行的命令 
    ExecStopPost： # 停止服务后执行的命令

    
WantedBy字段：
    multi-user.target: # 表示多用户命令行状态，这个设置很重要
    graphical.target:  # 表示图形用户状体，它依赖于multi-user.target
	
	

#systemctl 命令:
systemctl daemon-reload    # 重载系统服务
systemctl enable *.service # 设置某服务开机启动      
systemctl start *.service  # 启动某服务  
systemctl stop *.service   # 停止某服务 
systemctl reload *.service # 重启某服务
systemctl list-units --type=service  #查看已启动的服务



#service命令和systemd命令的映射
service name start    ---->  systemctl start name.service 
service name stop   ---->  systemctl stop name.service 
service name restart  ---->  systemctl restart name.service
service name condrestart ----> systemctl try-restart name.service 
service name reload  ---->  systemctl reload name.service
service name status ---->  systemctl status name.service
systemctl is-active name.service

service --status-all  ----> systemctl list-units –type service --all
chkconfig name on  ---->   systemctl enable name.service 
chkconfig name off   ---->   systemctl disable name.service 
chkconfig --list name  ---->  systemctl status name.service
system ctl is-enabled name.service
chkconfig --list  ----> systemctl list-unit-files –type service







































